{
  "name": "index-and-search-multiple-clients",
  "description": "Indexes vectors, then executes searches under various conditions",
  "default": false,
  "schedule": [
    {
      "operation": {
        "operation-type": "delete-index"
      }
    },
    {
      "operation": {
        "operation-type": "create-index"
      }
    },
    {
      "operation": {
        "operation-type": "cluster-health",
        "request-params": {
          "wait_for_status": "green"
        },
        "retry-until-success": true
      }
    },
    {
      "name": "index-append",
      "operation": {
        "operation-type": "bulk",
        "bulk-size": {{bulk_size | default(500)}},
        "ingest-percentage": {{ingest_percentage | default(100)}}
      },
      "warmup-time-period": {{ bulk_warmup | default(40) | int }},
      "clients": {{bulk_indexing_clients | default(1)}}
    },
    {
      "name": "refresh-after-index",
      "operation": {
        "operation-type": "refresh",
        "request-timeout": 60000,
        "include-in-reporting": true
      }
    },
    {
      "name": "put-knn-candidate-settings-0",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 50
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-10-50-match-all",
      "operation": "knn-search-10-50-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "script-score-query-match-all",
      "operation": "script-score-query-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-acceptedAnswerId",
      "operation": "knn-search-10-50-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "script-score-query-acceptedAnswerId",
      "operation": "script-score-query-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-java",
      "operation": "knn-search-10-50-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "script-score-query-java",
      "operation": "script-score-query-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-css",
      "operation": "knn-search-10-50-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "script-score-query-css",
      "operation": "script-score-query-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-concurrency",
      "operation": "knn-search-10-50-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "script-score-query-concurrency",
      "operation": "script-score-query-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "put-knn-candidate-settings-1",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 100
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-10-100-match-all",
      "operation": "knn-search-10-100-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-acceptedAnswerId",
      "operation": "knn-search-10-100-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-java",
      "operation": "knn-search-10-100-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },

    {
      "name": "knn-search-10-100-css",
      "operation": "knn-search-10-100-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },

    {
      "name": "knn-search-10-100-concurrency",
      "operation": "knn-search-10-100-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "put-knn-candidate-settings-2",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 1000
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-100-1000-match-all",
      "operation": "knn-search-100-1000-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-100-1000-acceptedAnswerId",
      "operation": "knn-search-100-1000-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },

    {
      "name": "knn-search-100-1000-java",
      "operation": "knn-search-100-1000-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },

    {
      "name": "knn-search-100-1000-css",
      "operation": "knn-search-100-1000-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },

    {
      "name": "knn-search-100-1000-concurrency",
      "operation": "knn-search-100-1000-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    }
    {# non-serverless-after-force-merge-marker-start #}{%- if build_flavor != "serverless" or serverless_operator == true -%}
      {% if p_include_force_merge %}
    ,
    {
      "operation": {
        "operation-type": "force-merge",
        "max-num-segments": {{max_num_segments | default(1)}},
        "request-timeout": 7200,
        "include-in-reporting": true
      }
    },
    {
      "name": "refresh-after-force-merge",
      "operation": "refresh"
    },
    {
      "name": "put-knn-candidate-settings-3",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 50
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-10-50-match-all-force-merge",
      "operation": "knn-search-10-50-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-acceptedAnswerId-force-merge",
      "operation": "knn-search-10-50-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-java-force-merge",
      "operation": "knn-search-10-50-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-css-force-merge",
      "operation": "knn-search-10-50-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-50-concurrency-force-merge",
      "operation": "knn-search-10-50-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "put-knn-candidate-settings-4",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 100
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-10-100-match-all-force-merge",
      "operation": "knn-search-10-100-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-acceptedAnswerId-force-merge",
      "operation": "knn-search-10-100-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-java-force-merge",
      "operation": "knn-search-10-100-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-css-force-merge",
      "operation": "knn-search-10-100-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-10-100-concurrency-force-merge",
      "operation": "knn-search-10-100-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "put-knn-candidate-settings-5",
      "operation": {
        "operation-type": "raw-request",
        "path": "/vectors/_settings",
        "method": "PUT",
        "body": {
          "index.knn.algo_param.ef_search": 1000
        },
        "retry-until-success": true,
        "include-in-reporting": false
     }
    },
    {
      "name": "knn-search-100-1000-match-all-force-merge",
      "operation": "knn-search-100-1000-match-all",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-100-1000-acceptedAnswerId-force-merge",
      "operation": "knn-search-100-1000-acceptedAnswerId",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-100-1000-java-force-merge",
      "operation": "knn-search-100-1000-java",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-100-1000-css-force-merge",
      "operation": "knn-search-100-1000-css",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    },
    {
      "name": "knn-search-100-1000-concurrency-force-merge",
      "operation": "knn-search-100-1000-concurrency",
      "warmup-iterations": 100,
      "iterations": 100,
      "clients": 8
    }
      {% endif %}
    {%- endif -%}{# non-serverless-after-force-merge-marker-end #}
  ]
}
